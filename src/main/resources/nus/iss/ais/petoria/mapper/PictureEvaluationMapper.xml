<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="nus.iss.ais.petoria.mapper.PictureEvaluationMapper">
  <resultMap id="BaseResultMap" type="nus.iss.ais.petoria.model.PictureEvaluation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="record_time" jdbcType="DATE" property="recordTime" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="breed_recognition_result" jdbcType="VARCHAR" property="breedRecognitionResult" />
    <result column="user_feedback" jdbcType="INTEGER" property="userFeedback" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, record_time, image_url, breed_recognition_result, user_feedback
  </sql>
  <select id="selectByExample" parameterType="nus.iss.ais.petoria.model.PictureEvaluationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from picture_evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from picture_evaluation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from picture_evaluation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="nus.iss.ais.petoria.model.PictureEvaluationExample">
    delete from picture_evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="nus.iss.ais.petoria.model.PictureEvaluation">
    insert into picture_evaluation (id, record_time, image_url, 
      breed_recognition_result, user_feedback)
    values (#{id,jdbcType=INTEGER}, #{recordTime,jdbcType=DATE}, #{imageUrl,jdbcType=VARCHAR}, 
      #{breedRecognitionResult,jdbcType=VARCHAR}, #{userFeedback,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="nus.iss.ais.petoria.model.PictureEvaluation" useGeneratedKeys="true" keyProperty="id">
    insert into picture_evaluation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="recordTime != null">
        record_time,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="breedRecognitionResult != null">
        breed_recognition_result,
      </if>
      <if test="userFeedback != null">
        user_feedback,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null">
        #{recordTime,jdbcType=DATE},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="breedRecognitionResult != null">
        #{breedRecognitionResult,jdbcType=VARCHAR},
      </if>
      <if test="userFeedback != null">
        #{userFeedback,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="nus.iss.ais.petoria.model.PictureEvaluationExample" resultType="java.lang.Long">
    select count(*) from picture_evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update picture_evaluation
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.recordTime != null">
        record_time = #{row.recordTime,jdbcType=DATE},
      </if>
      <if test="row.imageUrl != null">
        image_url = #{row.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="row.breedRecognitionResult != null">
        breed_recognition_result = #{row.breedRecognitionResult,jdbcType=VARCHAR},
      </if>
      <if test="row.userFeedback != null">
        user_feedback = #{row.userFeedback,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update picture_evaluation
    set id = #{row.id,jdbcType=INTEGER},
      record_time = #{row.recordTime,jdbcType=DATE},
      image_url = #{row.imageUrl,jdbcType=VARCHAR},
      breed_recognition_result = #{row.breedRecognitionResult,jdbcType=VARCHAR},
      user_feedback = #{row.userFeedback,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="nus.iss.ais.petoria.model.PictureEvaluation">
    update picture_evaluation
    <set>
      <if test="recordTime != null">
        record_time = #{recordTime,jdbcType=DATE},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="breedRecognitionResult != null">
        breed_recognition_result = #{breedRecognitionResult,jdbcType=VARCHAR},
      </if>
      <if test="userFeedback != null">
        user_feedback = #{userFeedback,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="nus.iss.ais.petoria.model.PictureEvaluation">
    update picture_evaluation
    set record_time = #{recordTime,jdbcType=DATE},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      breed_recognition_result = #{breedRecognitionResult,jdbcType=VARCHAR},
      user_feedback = #{userFeedback,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>